export interface StatusSyncEvent {
  type: "seller_status_change";
  sellerId: number;
  newStatus: "active" | "pending" | "blocked" | "revision" | "resubmitted";
  moderationComment?: string;
  timestamp: number;
}

export interface NotificationData {
  id: string;
  sellerId: number;
  title: string;
  message: string;
  type: "success" | "info" | "warning" | "error";
  timestamp: number;
  read: boolean;
}

class StatusSyncManager {
  private static instance: StatusSyncManager;
  private listeners: ((event: StatusSyncEvent) => void)[] = [];

  private constructor() {}

  static getInstance(): StatusSyncManager {
    if (!StatusSyncManager.instance) {
      StatusSyncManager.instance = new StatusSyncManager();
    }
    return StatusSyncManager.instance;
  }

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
  subscribe(listener: (event: StatusSyncEvent) => void) {
    this.listeners.push(listener);
    return () => {
      this.listeners = this.listeners.filter((l) => l !== listener);
    };
  }

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
  notifyStatusChange(event: StatusSyncEvent) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ localStorage –¥–ª—è –º–µ–∂–≤–∫–ª–∞–¥–æ—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    localStorage.setItem("seller_status_event", JSON.stringify(event));

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π
    this.listeners.forEach((listener) => listener(event));

    // –°–æ–∑–¥–∞–µ–º push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    this.createNotification(event);
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞
  private createNotification(event: StatusSyncEvent) {
    const notification: NotificationData = {
      id: `${event.sellerId}-${event.timestamp}`,
      sellerId: event.sellerId,
      title: this.getNotificationTitle(event.newStatus),
      message: this.getNotificationMessage(
        event.newStatus,
        event.moderationComment,
      ),
      type: this.getNotificationType(event.newStatus),
      timestamp: event.timestamp,
      read: false,
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ localStorage
    const notifications = this.getNotifications();
    notifications.unshift(notification);

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–æ 50
    if (notifications.length > 50) {
      notifications.splice(50);
    }

    localStorage.setItem("seller_notifications", JSON.stringify(notifications));
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞
  getNotifications(sellerId?: number): NotificationData[] {
    try {
      const notifications = JSON.parse(
        localStorage.getItem("seller_notifications") || "[]",
      );
      return sellerId
        ? notifications.filter((n: NotificationData) => n.sellerId === sellerId)
        : notifications;
    } catch {
      return [];
    }
  }

  // –û—Ç–º–µ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
  markAsRead(notificationId: string) {
    const notifications = this.getNotifications();
    const updated = notifications.map((n) =>
      n.id === notificationId ? { ...n, read: true } : n,
    );
    localStorage.setItem("seller_notifications", JSON.stringify(updated));
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  private getNotificationTitle(status: string): string {
    switch (status) {
      case "active":
        return "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –æ–¥–æ–±—Ä–µ–Ω";
      case "revision":
        return "üìù –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è";
      case "resubmitted":
        return "üîÑ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É";
      case "blocked":
        return "üö´ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω";
      default:
        return "üìã –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è";
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  private getNotificationMessage(status: string, comment?: string): string {
    switch (status) {
      case "active":
        return "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ–¥–∞–≤—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π.";
      case "revision":
        return (
          comment ||
          "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∏–ª –¥–æ—Ä–∞–±–æ—Ç–∫—É –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ."
        );
      case "resubmitted":
        return "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.";
      case "blocked":
        return (
          comment ||
          "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        );
      default:
        return "–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑–º–µ–Ω–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.";
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  private getNotificationType(
    status: string,
  ): "success" | "info" | "warning" | "error" {
    switch (status) {
      case "active":
        return "success";
      case "revision":
        return "warning";
      case "resubmitted":
        return "info";
      case "blocked":
        return "error";
      default:
        return "info";
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞
  updateStatus(data: {
    sellerId: number;
    newStatus: "active" | "pending" | "blocked" | "revision" | "resubmitted";
    moderationComment?: string;
  }) {
    const event: StatusSyncEvent = {
      type: "seller_status_change",
      sellerId: data.sellerId,
      newStatus: data.newStatus,
      moderationComment: data.moderationComment,
      timestamp: Date.now(),
    };

    this.notifyStatusChange(event);
  }

  // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
  cleanupOldNotifications() {
    const notifications = this.getNotifications();
    const thirtyDaysAgo = Date.now() - 30 * 24 * 60 * 60 * 1000;

    const filtered = notifications.filter((n) => n.timestamp > thirtyDaysAgo);
    localStorage.setItem("seller_notifications", JSON.stringify(filtered));
  }
}

export const statusSyncManager = StatusSyncManager.getInstance();

// –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –º–µ–∂–≤–∫–ª–∞–¥–æ—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
window.addEventListener("storage", (e) => {
  if (e.key === "seller_status_event" && e.newValue) {
    try {
      const event: StatusSyncEvent = JSON.parse(e.newValue);
      statusSyncManager.notifyStatusChange(event);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏—è —Å—Ç–∞—Ç—É—Å–∞:", error);
    }
  }
});
