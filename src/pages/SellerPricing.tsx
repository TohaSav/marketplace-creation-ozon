import { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { toast } from "@/hooks/use-toast";
import Icon from "@/components/ui/icon";
import { useAuth } from "@/context/AuthContext";
import {
  createPayment,
  getTariffPlans,
  activateSubscription,
  isYookassaActive,
} from "@/utils/yookassaApi";

interface TariffPlan {
  id: string;
  name: string;
  price: number;
  duration: string;
  features: string[];
  popular?: boolean;
  savings?: string;
}

const tariffPlans = getTariffPlans();

export default function SellerPricing() {
  const navigate = useNavigate();
  const location = useLocation();
  const { user } = useAuth();
  const [loading, setLoading] = useState(false);
  const [selectedTariff, setSelectedTariff] = useState<string | null>(null);
  const [walletBalance, setWalletBalance] = useState(0);
  const [paymentMethod, setPaymentMethod] = useState<"wallet" | "yukassa">(
    "yukassa",
  );
  const yookassaActive = isYookassaActive();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏—à–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è
  const isFromApproval = location.state?.fromApproval;

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞
  useEffect(() => {
    if (user) {
      const sellerData = JSON.parse(
        localStorage.getItem("seller-token") || "{}",
      );
      setWalletBalance(parseFloat(sellerData.balance || "0"));
    }
  }, [user]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–æ–¥–∞–≤–µ—Ü
  if (user?.userType !== "seller") {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-50 via-white to-blue-50">
        <div className="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
          <Card className="text-center border-0 shadow-xl">
            <CardHeader>
              <CardTitle className="text-2xl text-red-600 flex items-center justify-center gap-2">
                <Icon name="ShieldX" size={24} />
                –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600 mb-6">
                –î–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø—Ä–æ–¥–∞–≤—Ü–∞–º.
              </p>
              <Button onClick={() => navigate("/")} variant="outline">
                <Icon name="ArrowLeft" size={16} className="mr-2" />
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  const handlePayment = async (tariffId: string) => {
    setLoading(true);
    setSelectedTariff(tariffId);

    try {
      const tariff = tariffPlans.find((t) => t.id === tariffId);
      if (!tariff) {
        throw new Error("–¢–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω");
      }

      if (paymentMethod === "wallet") {
        // –û–ø–ª–∞—Ç–∞ —Å –∫–æ—à–µ–ª—å–∫–∞
        if (walletBalance < tariff.price) {
          toast({
            title: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
            description: `–ù–∞ –∫–æ—à–µ–ª—å–∫–µ ${walletBalance.toFixed(2)} ‚ÇΩ, –∞ –Ω—É–∂–Ω–æ ${tariff.price} ‚ÇΩ`,
            variant: "destructive",
          });
          setLoading(false);
          return;
        }

        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞
        const newBalance = walletBalance - tariff.price;
        const sellerData = JSON.parse(
          localStorage.getItem("seller-token") || "{}",
        );
        sellerData.balance = newBalance.toString();
        localStorage.setItem("seller-token", JSON.stringify(sellerData));
        setWalletBalance(newBalance);

        // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å–ø–∏—Å–∞–Ω–∏—è
        const transaction = {
          id: Date.now().toString(),
          sellerId: user.id,
          type: "tariff",
          amount: tariff.price,
          description: `–ü–æ–∫—É–ø–∫–∞ —Ç–∞—Ä–∏—Ñ–∞ "${tariff.name}"`,
          createdAt: new Date().toISOString(),
          status: "completed",
        };

        const allTransactions = JSON.parse(
          localStorage.getItem("seller-wallet-transactions") || "[]",
        );
        allTransactions.push(transaction);
        localStorage.setItem(
          "seller-wallet-transactions",
          JSON.stringify(allTransactions),
        );

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        activateSubscription(user.id, tariff.id);

        toast({
          title: "–¢–∞—Ä–∏—Ñ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üéâ",
          description: `–¢–∞—Ä–∏—Ñ "${tariff.name}" —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω —Å –∫–æ—à–µ–ª—å–∫–∞`,
        });

        navigate("/seller/dashboard");
      } else {
        // –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –Æ–ö–∞—Å—Å—É
        if (!yookassaActive) {
          toast({
            title: "–ü–ª–∞—Ç–µ–∂–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã",
            description: "–Æ–ö–∞—Å—Å–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            variant: "destructive",
          });
          return;
        }

        const paymentData = await createPayment({
          amount: tariff.price,
          description: `–ü–æ–¥–ø–∏—Å–∫–∞ ${tariff.name} –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞`,
          tariffId: tariff.id,
          sellerId: user.id,
          returnUrl:
            window.location.origin +
            "/seller/payment-success?tariff_id=" +
            tariff.id,
        });

        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –Æ–ö–∞—Å—Å—ã
        window.location.href = paymentData.confirmationUrl;
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã:", error);
      toast({
        title: "–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã",
        description:
          error instanceof Error
            ? error.message
            : "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        variant: "destructive",
      });
    } finally {
      setLoading(false);
      setSelectedTariff(null);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-white to-blue-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º */}
        <div className="text-center mb-16">
          {isFromApproval && (
            <div className="inline-flex items-center gap-2 bg-green-100 text-green-800 px-4 py-2 rounded-full mb-6">
              <Icon name="CheckCircle" size={20} />
              <span className="font-medium">–ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞!</span>
            </div>
          )}
          
          <h1 className="text-5xl font-bold text-gray-900 mb-6 bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
            –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω
          </h1>
          <p className="text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed">
            {isFromApproval 
              ? "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–¥–∞–∂ –Ω–∞ Calibre Store."
              : "–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ Calibre Store."
            }
          </p>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –Æ–ö–∞—Å—Å—ã */}
        {!yookassaActive && (
          <Card className="mb-8 border-amber-200 bg-gradient-to-r from-amber-50 to-yellow-50 shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center text-amber-800">
                <Icon name="AlertTriangle" size={20} className="mr-2" />
                –ü–ª–∞—Ç–µ–∂–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-amber-700">
                –Æ–ö–∞—Å—Å–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç
                –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫
                –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π.
              </p>
            </CardContent>
          </Card>
        )}

        {yookassaActive && (
          <Card className="mb-8 border-green-200 bg-gradient-to-r from-green-50 to-emerald-50 shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center text-green-800">
                <Icon name="CheckCircle" size={20} className="mr-2" />
                –ü–ª–∞—Ç–µ–∂–∏ –∞–∫—Ç–∏–≤–Ω—ã
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-green-700">
                –Æ–ö–∞—Å—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–∏–µ–º—É –ø–ª–∞—Ç–µ–∂–µ–π. –í—ã –º–æ–∂–µ—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ
                –æ–ø–ª–∞—á–∏–≤–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã.
              </p>
            </CardContent>
          </Card>
        )}

        {/* –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã */}
        <Card className="mb-12 shadow-xl border-0">
          <CardHeader className="bg-gradient-to-r from-gray-50 to-gray-100 rounded-t-lg">
            <CardTitle className="flex items-center gap-2 text-xl">
              <Icon name="CreditCard" size={24} className="text-purple-600" />
              –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
            </CardTitle>
          </CardHeader>
          <CardContent className="p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div
                className={`p-6 border-2 rounded-xl cursor-pointer transition-all duration-300 transform hover:scale-105 ${
                  paymentMethod === "wallet"
                    ? "border-green-500 bg-gradient-to-br from-green-50 to-emerald-50 shadow-lg"
                    : "border-gray-200 hover:border-gray-300 hover:shadow-md"
                }`}
                onClick={() => setPaymentMethod("wallet")}
              >
                <div className="flex items-center gap-4">
                  <div className="p-3 bg-green-100 rounded-full">
                    <Icon name="Wallet" size={28} className="text-green-600" />
                  </div>
                  <div>
                    <h3 className="font-bold text-lg">–õ–∏—á–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ üí≥</h3>
                    <p className="text-gray-600">
                      –ë–∞–ª–∞–Ω—Å: <span className="font-semibold">{walletBalance.toFixed(2)} ‚ÇΩ</span>
                    </p>
                  </div>
                </div>
                {paymentMethod === "wallet" && (
                  <div className="mt-4 flex items-center gap-2 text-green-600">
                    <Icon name="CheckCircle" size={20} />
                    <span className="font-semibold">–í—ã–±—Ä–∞–Ω–æ</span>
                  </div>
                )}
              </div>

              <div
                className={`p-6 border-2 rounded-xl cursor-pointer transition-all duration-300 transform hover:scale-105 ${
                  paymentMethod === "yukassa"
                    ? "border-blue-500 bg-gradient-to-br from-blue-50 to-indigo-50 shadow-lg"
                    : "border-gray-200 hover:border-gray-300 hover:shadow-md"
                }`}
                onClick={() => setPaymentMethod("yukassa")}
              >
                <div className="flex items-center gap-4">
                  <div className="p-3 bg-blue-100 rounded-full">
                    <Icon name="CreditCard" size={28} className="text-blue-600" />
                  </div>
                  <div>
                    <h3 className="font-bold text-lg">–Æ–ö–∞—Å—Å–∞</h3>
                    <p className="text-gray-600">
                      –ö–∞—Ä—Ç–∞, –°–ë–ü, –∫–æ—à–µ–ª—å–∫–∏
                    </p>
                  </div>
                </div>
                {paymentMethod === "yukassa" && (
                  <div className="mt-4 flex items-center gap-2 text-blue-600">
                    <Icon name="CheckCircle" size={20} />
                    <span className="font-semibold">–í—ã–±—Ä–∞–Ω–æ</span>
                  </div>
                )}
              </div>
            </div>

            {walletBalance < 50 && paymentMethod === "wallet" && (
              <div className="mt-6 p-4 bg-gradient-to-r from-amber-50 to-yellow-50 border border-amber-200 rounded-xl">
                <div className="flex items-center gap-2 text-amber-800 mb-3">
                  <Icon name="AlertTriangle" size={20} />
                  <span className="font-semibold">
                    –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–æ—à–µ–ª—å–∫–µ
                  </span>
                </div>
                <Button
                  onClick={() => navigate("/seller/wallet")}
                  variant="outline"
                  className="border-amber-300 text-amber-800 hover:bg-amber-100"
                >
                  <Icon name="Plus" size={16} className="mr-2" />
                  –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
                </Button>
              </div>
            )}
          </CardContent>
        </Card>

        {/* –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã */}
        <div className="grid lg:grid-cols-3 gap-8 max-w-7xl mx-auto mb-16">
          {tariffPlans.map((tariff) => (
            <Card
              key={tariff.id}
              className={`relative transition-all duration-300 transform hover:scale-105 border-0 shadow-xl ${
                tariff.id === "trial"
                  ? "bg-gradient-to-br from-green-50 to-emerald-50 ring-2 ring-green-400"
                  : tariff.popular
                    ? "bg-gradient-to-br from-purple-50 to-indigo-50 ring-2 ring-purple-400 scale-110"
                    : "bg-gradient-to-br from-gray-50 to-blue-50"
              }`}
            >
              {tariff.id === "trial" && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <Badge className="bg-gradient-to-r from-green-500 to-emerald-600 text-white px-6 py-2 text-sm font-bold shadow-lg">
                    üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ
                  </Badge>
                </div>
              )}
              {tariff.popular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <Badge className="bg-gradient-to-r from-purple-500 to-indigo-600 text-white px-6 py-2 text-sm font-bold shadow-lg">
                    ‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä
                  </Badge>
                </div>
              )}

              <CardHeader className="text-center pb-6 pt-8">
                <CardTitle className="text-3xl font-bold text-gray-800">
                  {tariff.name}
                </CardTitle>
                <div className="mt-6">
                  <span className="text-5xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
                    {tariff.price.toLocaleString()} ‚ÇΩ
                  </span>
                  <span className="text-gray-500 ml-2 text-lg">
                    / {tariff.duration}
                  </span>
                </div>
                {tariff.savings && (
                  <Badge
                    variant="outline"
                    className="mt-3 text-green-600 border-green-400 bg-green-50 font-semibold"
                  >
                    üí∞ {tariff.savings}
                  </Badge>
                )}
              </CardHeader>

              <CardContent className="px-6 pb-8">
                <ul className="space-y-4 mb-8">
                  {tariff.features.map((feature, index) => (
                    <li key={index} className="flex items-start">
                      <div className="p-1 bg-green-100 rounded-full mr-3 mt-0.5">
                        <Icon
                          name="Check"
                          size={16}
                          className="text-green-600"
                        />
                      </div>
                      <span className="text-gray-700 font-medium">{feature}</span>
                    </li>
                  ))}
                </ul>

                <Button
                  onClick={() => handlePayment(tariff.id)}
                  disabled={
                    loading ||
                    (paymentMethod === "yukassa" && !yookassaActive) ||
                    (paymentMethod === "wallet" && walletBalance < tariff.price)
                  }
                  className={`w-full py-3 text-lg font-semibold transition-all duration-300 ${
                    (paymentMethod === "yukassa" && !yookassaActive) ||
                    (paymentMethod === "wallet" && walletBalance < tariff.price)
                      ? "bg-gray-400 hover:bg-gray-400 cursor-not-allowed"
                      : tariff.id === "trial"
                        ? "bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 shadow-lg"
                        : tariff.popular
                          ? "bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 shadow-lg"
                          : "bg-gradient-to-r from-gray-700 to-gray-900 hover:from-gray-800 hover:to-black shadow-lg"
                  }`}
                >
                  {loading && selectedTariff === tariff.id ? (
                    <>
                      <Icon
                        name="Loader2"
                        size={20}
                        className="mr-2 animate-spin"
                      />
                      –û–±—Ä–∞–±–æ—Ç–∫–∞...
                    </>
                  ) : paymentMethod === "yukassa" && !yookassaActive ? (
                    <>
                      <Icon name="Lock" size={20} className="mr-2" />
                      –ü–ª–∞—Ç–µ–∂–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
                    </>
                  ) : paymentMethod === "wallet" &&
                    walletBalance < tariff.price ? (
                    <>
                      <Icon name="AlertCircle" size={20} className="mr-2" />
                      –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤
                    </>
                  ) : paymentMethod === "wallet" ? (
                    <>
                      <Icon name="Wallet" size={20} className="mr-2" />
                      –û–ø–ª–∞—Ç–∏—Ç—å —Å –∫–æ—à–µ–ª—å–∫–∞
                    </>
                  ) : (
                    <>
                      <Icon name="CreditCard" size={20} className="mr-2" />
                      –í—ã–±—Ä–∞—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å
                    </>
                  )}
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ */}
        <Card className="max-w-5xl mx-auto shadow-xl border-0">
          <CardHeader className="bg-gradient-to-r from-gray-50 to-gray-100 rounded-t-lg">
            <CardTitle className="flex items-center text-xl">
              <Icon name="Shield" size={28} className="mr-3 text-green-500" />
              –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞
            </CardTitle>
          </CardHeader>
          <CardContent className="p-8">
            <div className="grid md:grid-cols-3 gap-8 text-center">
              <div className="space-y-4">
                <div className="p-4 bg-blue-100 rounded-full w-20 h-20 flex items-center justify-center mx-auto">
                  <Icon
                    name="Lock"
                    size={40}
                    className="text-blue-600"
                  />
                </div>
                <h3 className="font-bold text-lg">–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏</h3>
                <p className="text-gray-600">
                  –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –Æ–ö–∞—Å—Å—É —Å SSL-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º
                </p>
              </div>
              <div className="space-y-4">
                <div className="p-4 bg-green-100 rounded-full w-20 h-20 flex items-center justify-center mx-auto">
                  <Icon
                    name="RefreshCw"
                    size={40}
                    className="text-green-600"
                  />
                </div>
                <h3 className="font-bold text-lg">–ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ</h3>
                <p className="text-gray-600">
                  –ü–æ–¥–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ –ø–µ—Ä–∏–æ–¥–∞
                </p>
              </div>
              <div className="space-y-4">
                <div className="p-4 bg-purple-100 rounded-full w-20 h-20 flex items-center justify-center mx-auto">
                  <Icon
                    name="HeadphonesIcon"
                    size={40}
                    className="text-purple-600"
                  />
                </div>
                <h3 className="font-bold text-lg">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7</h3>
                <p className="text-gray-600">
                  –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ */}
        <div className="text-center mt-12">
          <Button
            variant="outline"
            onClick={() => navigate("/seller/dashboard")}
            className="px-8 py-3 text-lg border-2 hover:bg-gray-50"
          >
            <Icon name="ArrowLeft" size={20} className="mr-2" />
            –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞–±–∏–Ω–µ—Ç
          </Button>
        </div>
      </div>
    </div>
  );
}