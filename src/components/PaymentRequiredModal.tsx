import { useState } from "react";
import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import Icon from "@/components/ui/icon";
import { useAuth } from "@/context/AuthContext";
import { yooKassaService, type PaymentData } from "@/services/yookassa";
import { toast } from "@/hooks/use-toast";
import { activateSubscription } from "@/utils/yookassaApi";

interface TariffPlan {
  id: string;
  name: string;
  price: number;
  monthlyPrice: number;
  features: string[];
  isPopular?: boolean;
  color: string;
}

const tariffPlans: TariffPlan[] = [
  {
    id: "trial",
    name: "–ü—Ä–æ–±–Ω—ã–π",
    price: 0,
    monthlyPrice: 0,
    features: [
      "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤",
      "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ Premium",
      "7 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
      "‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã —Å–∫—Ä–æ—é—Ç—Å—è –ø–æ—Å–ª–µ"
    ],
    color: "from-green-400 to-green-600"
  },
  {
    id: "maxi",
    name: "–ú–∞–∫—Å–∏",
    price: 3000,
    monthlyPrice: 300,
    features: [
      "–î–æ 500 —Ç–æ–≤–∞—Ä–æ–≤",
      "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
      "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
      "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–æ—Ü—Å–µ—Ç—è–º–∏",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä"
    ],
    isPopular: true,
    color: "from-green-500 to-green-600"
  },
  {
    id: "vip",
    name: "VIP",
    price: 5000,
    monthlyPrice: 500,
    features: [
      "–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã",
      "–ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
      "24/7 –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
      "–í—Å–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä",
      "–†–µ–∫–ª–∞–º–∞ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ"
    ],
    color: "from-purple-500 to-purple-600"
  },
  {
    id: "premium",
    name: "–ü—Ä–µ–º–∏—É–º",
    price: 10000,
    monthlyPrice: 1000,
    features: [
      "–í—Å—ë –∏–∑ VIP",
      "–ë–µ–ª–∞—è –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞",
      "API –¥–æ—Å—Ç—É–ø",
      "–ö–∞—Å—Ç–æ–º–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      "–í—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä",
      "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è"
    ],
    color: "from-orange-500 to-red-500"
  }
];

interface PaymentRequiredModalProps {
  isOpen: boolean;
  onClose?: () => void;
}

export default function PaymentRequiredModal({ isOpen, onClose }: PaymentRequiredModalProps) {
  const [selectedPlan, setSelectedPlan] = useState<string>("trial");
  const [paymentMethod, setPaymentMethod] = useState<"wallet" | "yookassa">("yookassa");
  const [isProcessing, setIsProcessing] = useState(false);
  const { user, updateUser } = useAuth();

  if (!isOpen || !user) return null;

  const handlePayment = async () => {
    setIsProcessing(true);
    
    try {
      const selectedTariff = tariffPlans.find(plan => plan.id === selectedPlan);
      if (!selectedTariff) {
        throw new Error("–¢–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω");
      }

      // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ
      if (selectedPlan === "trial") {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ —É–∂–µ –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ
        if (user.hasUsedTrial) {
          toast({
            title: "–ü—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω",
            description: "–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ. –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω.",
            variant: "destructive",
          });
          return;
        }

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ
        const subscription = activateSubscription(
          user.id,
          "trial"
        );
        
        const updatedUser = {
          ...user,
          subscription,
          hasUsedTrial: true
        };
        
        updateUser(updatedUser);
        
        toast({
          title: "–ü—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üéâ",
          description: "–£ –≤–∞—Å –µ—Å—Ç—å 7 –¥–Ω–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π Premium.",
          variant: "default",
        });
        
        // –ú–æ–¥–∞–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é hasActiveSubscription
        return;
      }

      // –î–ª—è –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ - –æ–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ –Æ–ö–∞—Å—Å—É
      if (paymentMethod === "yookassa") {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ÆKassa
        if (!yooKassaService.isEnabled()) {
          toast({
            title: "–ü–ª–∞—Ç–µ–∂–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã",
            description: "–ÆKassa –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            variant: "destructive",
          });
          return;
        }

        const paymentData: PaymentData = {
          amount: {
            value: selectedTariff.price.toString(),
            currency: "RUB",
          },
          description: `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–∞—Ä–∏—Ñ "${selectedTariff.name}" –Ω–∞ 1 –º–µ—Å—è—Ü`,
          confirmation: {
            type: "redirect",
            return_url: `${window.location.origin}/payment-success`,
          },
          capture: true,
          metadata: {
            user_id: user.id,
            tariff_id: selectedPlan,
            tariff_name: selectedTariff.name,
          },
        };

        const payment = await yooKassaService.createPayment(paymentData);

        if (payment.confirmation?.confirmation_url) {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ
          localStorage.setItem(
            "pending_payment",
            JSON.stringify({
              id: payment.id,
              amount: payment.amount,
              description: payment.description,
              tariffId: selectedPlan,
              userId: user.id,
              createdAt: new Date().toISOString(),
            })
          );

          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Æ–ö–∞—Å—Å—É
          window.location.href = payment.confirmation.confirmation_url;
        } else {
          throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –¥–ª—è –æ–ø–ª–∞—Ç—ã");
        }
      } else if (paymentMethod === "wallet") {
        // –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –∫–æ—à–µ–ª–µ–∫
        const userBalance = user.balance || 0;
        if (userBalance < selectedTariff.price) {
          toast({
            title: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
            description: "–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.",
            variant: "destructive",
          });
          return;
        }

        // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
        const subscription = activateSubscription(
          user.id,
          "monthly"
        );
        
        const updatedUser = {
          ...user,
          subscription,
          balance: userBalance - selectedTariff.price
        };
        
        updateUser(updatedUser);
        
        toast({
          title: "–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! üéâ",
          description: `–¢–∞—Ä–∏—Ñ "${selectedTariff.name}" —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω –∏–∑ –∫–æ—à–µ–ª—å–∫–∞.`,
          variant: "default",
        });
        
        // –ú–æ–¥–∞–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é hasActiveSubscription
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã:", error);
      const errorMessage = error instanceof Error ? error.message : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ";
      
      toast({
        title: "–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã",
        description: errorMessage,
        variant: "destructive",
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <div className="fixed inset-0 z-[100] bg-black/80 backdrop-blur-sm flex items-center justify-center p-4">
      <div className="bg-white rounded-xl max-w-6xl w-full max-h-[90vh] overflow-y-auto shadow-2xl">
        <div className="sticky top-0 bg-white border-b p-6 z-10">
          <div className="relative">
            {onClose && (
              <button
                onClick={onClose}
                className="absolute right-0 top-0 p-2 text-gray-400 hover:text-gray-600 transition-colors"
                title="–ó–∞–∫—Ä—ã—Ç—å"
              >
                <Icon name="X" size={24} />
              </button>
            )}
            <div className="text-center">
              <Icon name="CreditCard" size={48} className="mx-auto text-blue-600 mb-4" />
              <h2 className="text-3xl font-bold text-gray-900 mb-2">
                –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω. 
                –≠—Ç–æ –¥–∞—Å—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
              </p>
            </div>
          </div>
        </div>

        <div className="p-6">
          {/* –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            {tariffPlans.map((plan) => (
              <div
                key={plan.id}
                className={cn(
                  "relative bg-white border-2 rounded-xl p-6 cursor-pointer transition-all duration-200 hover:shadow-lg",
                  selectedPlan === plan.id
                    ? "border-blue-500 shadow-lg scale-105"
                    : "border-gray-200 hover:border-gray-300",
                  plan.isPopular && "ring-2 ring-green-500 ring-offset-2"
                )}
                onClick={() => setSelectedPlan(plan.id)}
              >
                {plan.isPopular && (
                  <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                    <span className="bg-green-500 text-white px-3 py-1 rounded-full text-sm font-medium">
                      –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                    </span>
                  </div>
                )}

                <div className={cn("w-12 h-12 rounded-lg bg-gradient-to-r mb-4 flex items-center justify-center", plan.color)}>
                  <Icon name="Star" className="text-white" size={24} />
                </div>

                <h3 className="text-xl font-bold text-gray-900 mb-2">{plan.name}</h3>
                
                <div className="mb-4">
                  <div className="text-3xl font-bold text-gray-900">
                    {plan.price === 0 ? '–ë–ï–°–ü–õ–ê–¢–ù–û' : `‚ÇΩ${plan.price.toLocaleString()}`}
                  </div>
                  <div className="text-sm text-gray-500">
                    {plan.price === 0 ? '–Ω–∞ 7 –¥–Ω–µ–π' : `‚ÇΩ${plan.monthlyPrice}/–º–µ—Å—è—Ü`}
                  </div>
                </div>

                <ul className="space-y-2 mb-6">
                  {plan.features.map((feature, index) => (
                    <li key={index} className="flex items-start gap-2 text-sm">
                      <Icon name="Check" size={16} className="text-green-500 mt-0.5 flex-shrink-0" />
                      <span className="text-gray-600">{feature}</span>
                    </li>
                  ))}
                </ul>

                <div className={cn(
                  "w-6 h-6 rounded-full border-2 mx-auto",
                  selectedPlan === plan.id
                    ? "bg-blue-500 border-blue-500"
                    : "border-gray-300"
                )}>
                  {selectedPlan === plan.id && (
                    <Icon name="Check" size={14} className="text-white m-0.5" />
                  )}
                </div>
              </div>
            ))}
          </div>

          {/* –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
          <div className="mb-8">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div
                className={cn(
                  "border-2 rounded-lg p-4 cursor-pointer transition-all duration-200",
                  paymentMethod === "yookassa"
                    ? "border-blue-500 bg-blue-50"
                    : "border-gray-200 hover:border-gray-300"
                )}
                onClick={() => setPaymentMethod("yookassa")}
              >
                <div className="flex items-center gap-3">
                  <div className={cn(
                    "w-5 h-5 rounded-full border-2",
                    paymentMethod === "yookassa"
                      ? "bg-blue-500 border-blue-500"
                      : "border-gray-300"
                  )}>
                    {paymentMethod === "yookassa" && (
                      <Icon name="Check" size={12} className="text-white m-0.5" />
                    )}
                  </div>
                  <div>
                    <div className="font-medium text-gray-900">–ÆKassa</div>
                    <div className="text-sm text-gray-500">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞, –°–ë–ü, –∫–æ—à–µ–ª—å–∫–∏</div>
                  </div>
                </div>
              </div>

              <div
                className={cn(
                  "border-2 rounded-lg p-4 cursor-pointer transition-all duration-200",
                  paymentMethod === "wallet"
                    ? "border-blue-500 bg-blue-50"
                    : "border-gray-200 hover:border-gray-300"
                )}
                onClick={() => setPaymentMethod("wallet")}
              >
                <div className="flex items-center gap-3">
                  <div className={cn(
                    "w-5 h-5 rounded-full border-2",
                    paymentMethod === "wallet"
                      ? "bg-blue-500 border-blue-500"
                      : "border-gray-300"
                  )}>
                    {paymentMethod === "wallet" && (
                      <Icon name="Check" size={12} className="text-white m-0.5" />
                    )}
                  </div>
                  <div>
                    <div className="font-medium text-gray-900">–ö–æ—à–µ–ª–µ–∫ –ø—Ä–æ–¥–∞–≤—Ü–∞</div>
                    <div className="text-sm text-gray-500">
                      –ë–∞–ª–∞–Ω—Å: ‚ÇΩ{(user.balance || 0).toLocaleString()}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –ò—Ç–æ–≥–æ –∏ –∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
          <div className="bg-gray-50 rounded-lg p-6">
            <div className="flex items-center justify-between mb-4">
              <div>
                <div className="text-lg font-semibold text-gray-900">
                  –¢–∞—Ä–∏—Ñ "{tariffPlans.find(p => p.id === selectedPlan)?.name}"
                </div>
                <div className="text-sm text-gray-500">–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü</div>
              </div>
              <div className="text-right">
                <div className="text-2xl font-bold text-gray-900">
                  ‚ÇΩ{tariffPlans.find(p => p.id === selectedPlan)?.price.toLocaleString()}
                </div>
              </div>
            </div>

            <Button
              onClick={handlePayment}
              disabled={isProcessing || (paymentMethod === "wallet" && (user.balance || 0) < (tariffPlans.find(p => p.id === selectedPlan)?.price || 0)) || (selectedPlan === "trial" && user.hasUsedTrial)}
              className={cn(
                "w-full h-12 text-lg font-medium",
                selectedPlan === "trial" 
                  ? "bg-green-600 hover:bg-green-700" 
                  : "bg-blue-600 hover:bg-blue-700"
              )}
            >
              {isProcessing ? (
                <div className="flex items-center gap-2">
                  <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin" />
                  {selectedPlan === "trial" ? "–ê–∫—Ç–∏–≤–∞—Ü–∏—è..." : "–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞..."}
                </div>
              ) : selectedPlan === "trial" ? (
                user.hasUsedTrial ? (
                  <div className="flex items-center gap-2">
                    <Icon name="X" size={20} />
                    –ü—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
                  </div>
                ) : (
                  <div className="flex items-center gap-2">
                    <Icon name="Gift" size={20} />
                    –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
                  </div>
                )
              ) : (
                <div className="flex items-center gap-2">
                  <Icon name="CreditCard" size={20} />
                  –û–ø–ª–∞—Ç–∏—Ç—å ‚ÇΩ{tariffPlans.find(p => p.id === selectedPlan)?.price.toLocaleString()}
                </div>
              )}
            </Button>

            {paymentMethod === "wallet" && (user.balance || 0) < (tariffPlans.find(p => p.id === selectedPlan)?.price || 0) && selectedPlan !== "trial" && (
              <p className="text-sm text-red-500 mt-2 text-center">
                –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –≤ –∫–æ—à–µ–ª—å–∫–µ. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.
              </p>
            )}
            
            {selectedPlan === "trial" && user.hasUsedTrial && (
              <p className="text-sm text-red-500 mt-2 text-center">
                –í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–±–Ω—ã–π —Ç–∞—Ä–∏—Ñ. –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω.
              </p>
            )}
            
            {selectedPlan === "trial" && !user.hasUsedTrial && (
              <p className="text-sm text-green-600 mt-2 text-center">
                üéÅ –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º Premium –Ω–∞ 7 –¥–Ω–µ–π!
              </p>
            )}
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª–æ–≤–∏—è—Ö */}
        <div className="border-t bg-gray-50 p-6">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-sm text-gray-600">
            <div className="flex items-start gap-2">
              <Icon name="Shield" size={16} className="text-green-500 mt-0.5 flex-shrink-0" />
              <div>
                <div className="font-medium text-gray-900">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</div>
                <div>–í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞—â–∏—â–µ–Ω—ã SSL-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º</div>
              </div>
            </div>
            <div className="flex items-start gap-2">
              <Icon name="RefreshCw" size={16} className="text-blue-500 mt-0.5 flex-shrink-0" />
              <div>
                <div className="font-medium text-gray-900">–ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ</div>
                <div>–ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</div>
              </div>
            </div>
            <div className="flex items-start gap-2">
              <Icon name="Headphones" size={16} className="text-purple-500 mt-0.5 flex-shrink-0" />
              <div>
                <div className="font-medium text-gray-900">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7</div>
                <div>–ü–æ–º–æ—â—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}